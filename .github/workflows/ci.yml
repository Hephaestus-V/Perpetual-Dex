name: Perpetual DEX CI/CD

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  backend-test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.19
    
    - name: Install dependencies
      run: go mod download
    
    - name: Test
      run: go test -v ./...

  frontend-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'
        cache: 'npm'
        cache-dependency-path: './frontend/package-lock.json'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run tests
      run: npm test

  smart-contract-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./contracts
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run tests
      run: npx hardhat test

  build-and-push:
    needs: [backend-test, frontend-test, smart-contract-test]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
    
    - name: Build and push backend
      uses: docker/build-push-action@v3
      with:
        context: .
        file: ./docker/Dockerfile
        push: true
        tags: yourusername/perpetual-dex-backend:latest
    
    - name: Build and push frontend
      uses: docker/build-push-action@v3
      with:
        context: ./frontend
        file: ./frontend/Dockerfile
        push: true
        tags: yourusername/perpetual-dex-frontend:latest

  deploy:
    needs: build-and-push
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Deploy to AWS ECS
      run: |
        echo "Deployment script would go here"
        # In a real setup, this would use AWS CLI or Terraform to deploy
        # to ECS, EKS, or another container orchestration service 